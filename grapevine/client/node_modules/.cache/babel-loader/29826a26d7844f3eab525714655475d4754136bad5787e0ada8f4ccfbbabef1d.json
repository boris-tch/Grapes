{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\boris\\\\Documents\\\\Code\\\\TheGrapeVine\\\\grapevine\\\\client\\\\src\\\\sockettester.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:3001'); // or your actual server address\n\nexport default function SocketTester() {\n  _s();\n  useEffect(() => {\n    socket.on('connect', () => {\n      console.log('✅ Connected to server');\n    });\n    socket.on('disconnect', () => {\n      console.log('❌ Disconnected from server');\n    });\n\n    // Clean up on component unmount\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Socket Connection Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(SocketTester, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = SocketTester;\nvar _c;\n$RefreshReg$(_c, \"SocketTester\");","map":{"version":3,"names":["useEffect","io","jsxDEV","_jsxDEV","socket","SocketTester","_s","on","console","log","disconnect","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/boris/Documents/Code/TheGrapeVine/grapevine/client/src/sockettester.tsx"],"sourcesContent":["import { useEffect } from 'react';\r\nimport { io } from 'socket.io-client';\r\n\r\nconst socket = io('http://localhost:3001'); // or your actual server address\r\n\r\nexport default function SocketTester() {\r\n  useEffect(() => {\r\n    socket.on('connect', () => {\r\n      console.log('✅ Connected to server');\r\n    });\r\n\r\n    socket.on('disconnect', () => {\r\n      console.log('❌ Disconnected from server');\r\n    });\r\n\r\n    // Clean up on component unmount\r\n    return () => {\r\n      socket.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Socket Connection Test</h1>\r\n    </div>\r\n  );\r\n}"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,EAAE,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,MAAM,GAAGH,EAAE,CAAC,uBAAuB,CAAC,CAAC,CAAC;;AAE5C,eAAe,SAASI,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACrCN,SAAS,CAAC,MAAM;IACdI,MAAM,CAACG,EAAE,CAAC,SAAS,EAAE,MAAM;MACzBC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;IACtC,CAAC,CAAC;IAEFL,MAAM,CAACG,EAAE,CAAC,YAAY,EAAE,MAAM;MAC5BC,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;IAC3C,CAAC,CAAC;;IAEF;IACA,OAAO,MAAM;MACXL,MAAM,CAACM,UAAU,CAAC,CAAC;IACrB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAAQ,QAAA,eACER,OAAA;MAAAQ,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5B,CAAC;AAEV;AAACT,EAAA,CArBuBD,YAAY;AAAAW,EAAA,GAAZX,YAAY;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}